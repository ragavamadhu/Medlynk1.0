import { NgModule, InjectionToken } from '@angular/core';
import { GaugeComponent } from './gauge.component';
import { GaugeDefaults } from './gauge-defaults.service';
export var USER_DEFAULTS = new InjectionToken('gauge defaults');
export function defaultsFactory(userDefaults) {
    var defaults = new GaugeDefaults();
    Object.assign(defaults, userDefaults);
    return defaults;
}
var GaugeModule = (function () {
    function GaugeModule() {
    }
    GaugeModule.forRoot = function (userDefaults) {
        if (userDefaults === void 0) { userDefaults = {}; }
        return {
            ngModule: GaugeModule,
            providers: [{
                    provide: USER_DEFAULTS,
                    useValue: userDefaults
                }, {
                    provide: GaugeDefaults,
                    useFactory: defaultsFactory,
                    deps: [USER_DEFAULTS]
                }]
        };
    };
    return GaugeModule;
}());
export { GaugeModule };
GaugeModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    GaugeComponent
                ],
                exports: [
                    GaugeComponent
                ]
            },] },
];
/** @nocollapse */
GaugeModule.ctorParameters = function () { return []; };
//# sourceMappingURL=gauge.module.js.map